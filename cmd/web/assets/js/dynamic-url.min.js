htmx.defineExtension("dynamic-url",{onEvent:function(e,n){if("htmx:configRequest"!==e)return;let o=n.detail.path;const t=/\{([^}]+)\}/g;if(!t.test(o))return void(t.lastIndex=0);t.lastIndex=0;const l=n.detail.elt,r="function"==typeof htmx.config.dynamicUrlResolver?htmx.config.dynamicUrlResolver:null,c=!0===htmx.config.dynamicUrlAllowWindowFallback;let i=!1;const a=o.replace(t,((e,n)=>{const o=(e=>{let n,o=!1;if(r)try{const t=r(e,l);void 0!==t&&(n=t,o=!0)}catch(n){console.error(`dynamic-url: Error in resolver function for "${e}"`,n)}if(!o&&c)try{let t=window;const l=e.split(".");let r=!0;for(const e of l){if(null==t||!Object.prototype.hasOwnProperty.call(t,e)){r=!1;break}t=t[e]}r&&(n=t&&"function"==typeof t.get?t.get():t,o=!0)}catch(n){console.error(`dynamic-url: Error during window fallback for "${e}"`,n),o=!1}return o?{resolved:!0,value:n}:(console.warn(`dynamic-url: Could not resolve "${e}". Resolver: ${r?"tried":"none"}, Fallback: ${c?"enabled":"disabled"}.`),{resolved:!1})})(n);return o.resolved?(i=!0,encodeURIComponent(String(o.value))):e}));i&&(n.detail.path=a)}});